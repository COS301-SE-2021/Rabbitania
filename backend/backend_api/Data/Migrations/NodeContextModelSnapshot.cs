// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_api.Data.Node;

namespace backend_api.Data.Migrations
{
    [DbContext(typeof(NodeContext))]
    partial class NodeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("backend_api.Models.Node.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("userEmail")
                        .HasColumnType("text");

                    b.Property<float>("xPos")
                        .HasColumnType("real");

                    b.Property<float>("yPos")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("backend_api.Models.Node.Node", b =>
                {
                    b.HasOne("backend_api.Models.User.Users", "user")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
